name: 'Release'
on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'bump of verision'
        required: true
        default: 'minor'

jobs:
  create_release:
    name: 'Create release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Extract previous maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: previous-version

      - name: Show extracted previous maven project version
        run: echo ${{ steps.previous-version.outputs.version }}

      - name: Git config
        run: |
          git config --global user.email josevieira.dev@gmail.com
          git config --global user.name netodevel

      - name: Apply version bump (major)
        if: contains(github.event.inputs.semver, 'major')
        run: |
          mvn --batch-mode build-helper:parse-version versions:set -DnewVersion='${parsedVersion.nextMajorVersion}.0.0' versions:commit
          git add pom.xml
          git commit -m "bump(version): Update major "

      - name: Apply version bump (minor)
        if: contains(github.event.inputs.semver, 'minor')
        run: |
          mvn --batch-mode build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.${parsedVersion.incrementalVersion}' versions:commit
          git add pom.xml
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          git commit -m "bump(version): Update minor ${{ steps.project.outputs.version }}"

      - name: Apply version bump (patch)
        if: contains(github.event.inputs.semver, 'patch')
        run: |
          mvn --batch-mode build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}' versions:commit
          git add pom.xml
          git commit -m "chore: change patch version"

      - name: Extract next maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Show extracted next maven project version
        run: echo ${{ steps.project.outputs.version }}

      - name: Create git tag
        run: git tag v${{ steps.project.outputs.version }}

      - name: Create a release branch
        run: git checkout -b feature/${{ steps.project.outputs.version }}

      - name: push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          tags: true

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release -g
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.PAT }}
          JRELEASER_PROJECT_VERSION: ${{ steps.project.outputs.version }}
          JRELEASER_PREVIOUS_TAG_NAME: v${{ steps.previous-version.outputs.version }}
